name: LiveImport Test Suite

on:
  pull_request:
  workflow_dispatch:

#
# Because running the full matrix of tests, we test the "canary" configuration
# first: Python 3.12 on Linux using the latest versions of IPython and
# notebook.  Because of the nature LiveImport, if that test fails, likely all
# the tests will fail.  The canary test also makes sure we still have 100% test
# coverage.
#
# (ACTUALLY, expect the code coverage check will fail because of a Windows
# specific bit.  Will need to switch to Windows as the canary platform.)
#

jobs:
  canary:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install ipython notebook coverage
        pip install -e .

    - name: Run Canary Test Suite
      run: coverage run test/main.py

    - name: Generate Canary Coverage Report
      run: coverage report -m

    - name: Enforce 100% Coverage on src/liveimport.py
      run: |
        coverage report --include=src/liveimport.py --fail-under=100

  test:
    needs: canary
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [\"3.10\", \"3.11\", \"3.12\", \"3.13\"]
        dependencies:
          - {ipython: \"7.16.1\", notebook: \"5.7\"}    # Oldest supported
          - {ipython: \"latest\", notebook: \"latest\"} # Latest
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        if [ \"${{ matrix.dependencies.ipython }}\" = \"latest\" ]; then
          pip install ipython
        else
          pip install ipython==${{ matrix.dependencies.ipython }}
        fi
        if [ \"${{ matrix.dependencies.notebook }}\" = \"latest\" ]; then
          pip install notebook
        else
          pip install notebook==${{ matrix.dependencies.notebook }}
        fi
        pip install coverage
        pip install -e .
      shell: bash

    - name: Run Test Suite
      run: python test/main.py
      shell: bash
